// Generated by CoffeeScript 2.4.1
(function() {
  $(document).ready(function() {
    var getVoice, init, nextPose, nextRep, playTimer, playYoga, speak, yoga, yogaEnded;
    window.yoga = yoga = {
      time_count: 1,
      time_out: null,
      pose_index: 0,
      pose_rep: 1,
      voice: null
    };
    window.count_array = {};
    // yoga.poses = [
    //   name: "Suryanamaskar"
    //   time: 60
    //   reps: 2
    // ,
    //   name: "Trikonasana"
    //   time: 30
    //   reps: 2
    // ,
    //   name: "Ardha Matsyendrasana"
    //   time: 30
    //   reps: 2
    // ,
    //   name: "Leg Raise"
    //   time: 50
    //   reps: 2
    // ,
    //   name: "Paschimottasana"
    //   time: 60
    //   reps: 1
    // , 
    //   name: "Plank Pose"
    //   time: 60
    //   reps: 1
    // , 
    //   name: "Dhanurasana"
    //   time: 30
    //   reps: 1
    // ,
    //   name: "Chair Pose"
    //   time: 60
    //   reps: 1
    // ,
    //   name: "Sarvangasana"
    //   time: 60
    //   reps: 1
    // ,
    //   name: "Sirasasana"
    //   time: 60
    //   reps: 1
    // ]
    yoga.poses = [
      {
        name: "Sarvangasana",
        time: 120,
        reps: 1
      }
    ];
    speak = function(text, followup) {
      var msg, voices;
      msg = new SpeechSynthesisUtterance;
      voices = window.speechSynthesis.getVoices();
      if (yoga.voice !== null) {
        msg.voice = voices[yoga.voice];
      }
      msg.voiceURI = 'native';
      msg.volume = 1;
      // msg.rate = 1
      // msg.pitch = 2
      msg.text = text;
      msg.lang = 'en_IN';
      msg.onend = function(e) {
        console.log('Finished in ' + event.elapsedTime + ' seconds.');
        window.count_array[text] = event.elapsedTime;
        console.log(window.count_array);
        followup();
      };
      console.log(msg);
      return speechSynthesis.speak(msg);
    };
    playTimer = function() {
      if (yoga.time_count > yoga.poses[yoga.pose_index].time) {
        if (yoga.pose_index === yoga.poses.length - 1) {
          return yogaEnded();
        } else {
          yoga.time_count = 0;
          if (yoga.pose_rep === yoga.poses[yoga.pose_index].reps) {
            yoga.pose_rep = 1;
            yoga.pose_index = yoga.pose_index + 1;
            return nextPose();
          } else {
            yoga.pose_rep = yoga.pose_rep + 1;
            return nextRep();
          }
        }
      } else {
        speak(inWords(window.yoga.time_count.toString()), function() {});
        yoga.time_count = yoga.time_count + 1;
        if (yoga.time_count === 1) {
          $("#current-time").html("-");
        } else {
          $("#current-time").html(yoga.time_count - 1);
        }
        return yoga.time_out = setTimeout(playTimer, 1200);
      }
    };
    nextRep = function() {
      $("#current-pose").html(yoga.poses[yoga.pose_index].name + " #" + yoga.pose_rep);
      return speak(`Starting Rep ${yoga.pose_rep} of ${yoga.poses[yoga.pose_index].name} in 3 seconds`, function() {
        return setTimeout(playTimer, 1000);
      });
    };
    nextPose = function() {
      $("#current-pose").html(yoga.poses[yoga.pose_index].name + " #" + yoga.pose_rep);
      speak(`Starting ${yoga.poses[yoga.pose_index].name} in 5 seconds`, function() {});
      return setTimeout(playTimer, 5000);
    };
    getVoice = function() {
      var final_voices, voices;
      voices = speechSynthesis.getVoices();
      final_voices = voices.filter(function(x) {
        return x.voiceURI === "Google हिन्दी" || x.voiceURI === "Hindi India";
      });
      if (final_voices.length > 0 && voices.indexOf(final_voices[0] > 0)) {
        return voices.indexOf(final_voices[0]);
      } else {
        return null;
      }
    };
    playYoga = function() {
      if (yoga.pose_index === 0 && yoga.time_count === 1) {
        nextPose();
      }
      return false;
    };
    yogaEnded = function() {
      return setTimeout(function() {
        speak("Good job!", function() {});
        return speak("Today's Yoga session is complete.", function() {});
      }, 2000);
    };
    $("#start-yoga").click(function() {
      $(".pre-start").hide();
      $(".current-yoga").removeClass("d-none");
      playYoga();
      return false;
    });
    $("#pause-yoga").click(function() {
      return clearTimeout(window.yoga.time_out);
    });
    init = function() {
      console.log("Initializing");
      yoga.voice = getVoice();
      return console.log(`Voice id ${yoga.voice}`);
    };
    return setTimeout(init, 2000);
  });

}).call(this);
